#include<iostream>
#include"base.h"
#include"block.h"
#include"person.h"
#include"box.h"
#include"content.h"
#include<stdio.h>
#include<stdlib.h>
#ifdef _WIN32
    #include<conio.h>
#else
    char getch();
#endif
int main() {
    #include"_maps.h"
    bool isq = false;
    int _LEVEL = sizeof(_MAPS_def)/_SIZE;
    for(int i = 0; i< _LEVEL && !isq; i++) {
        map m;   
        m.read(_MAPS_def[i]);
        content c(&m);
        char in;
        bool isf = false;
        while(!isq && !isf) {
#ifdef _WIN32
        system("cls");
#else
        system("clear");
#endif
        std::cout<<"关卡"<<(i+1)<<std::endl;
        c.display();
        std::cout << "****回退(b)方向控制（asdw)****"<<std::endl;

        in = getch();
      
        switch (in)
        {
            case 'w' :
            case 'W' :
               c.actinput(UP);
               break;
            case 's' :
            case 'S' :
                c.actinput(DOWN);
                break;
            case 'a' :
            case 'A' :
                c.actinput(LEFT);
                break;
            case 'd' :
            case 'D' :
                c.actinput(RIGHT);
                break;
            case 'b':
            case 'B':
                c.back();
                break;
            case 'q':
            case 'Q':
                isq = true;
                break;
            default:
                break;
            }
            isf = c.isfinsh();
        }

        map mreview;
        m.read(_MAPS_def[i]);
        content creview(&mreview);
        creview.display();
       
        getch();
        
    }
    if(!isq)
        std::cout << "恭喜你,完成了所有关卡!"<<std::endl;
    else 
        std::cout <<"再见!"<<std::endl;
    getch();
    return 0;
}


#ifndef _WIN32
#include <termio.h>
char getch(void)
{
     struct termios tm, tm_old;
     int fd = 0, ch;
 
     if (tcgetattr(fd, &tm) < 0) {
          return -1;
     }
 
     tm_old = tm;
     cfmakeraw(&tm);
     if (tcsetattr(fd, TCSANOW, &tm) < 0) {
          return -1;
     }
 
     ch = getchar();
     if (tcsetattr(fd, TCSANOW, &tm_old) < 0) {
          return -1;
     }
    
     return ch;
}
#endif